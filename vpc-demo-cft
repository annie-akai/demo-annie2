AWSTemplateFormatVersion: "2010-09-09"

Description: Create VPC and Its components

Parameters:
  VPCCidrBlock:
    Type: String
    Default : 10.0.0.0/16
    Description: This is the CIDR of the VPC
  
  VPCName:
    Type: String
    Description: This is the name of the VPC

  PublicSubnet1CIDR:
    Type: String
    Default : 10.0.1.0/26
    Description: This is the first Public Subnet CidrBlock

  PublicSubnet2CIDR:
    Type: String
    Default : 10.0.2.0/26
    Description: This is the Second Public Subnet CidrBlock

  PrivateSubnet1CIDR:
    Type: String
    Default : 10.0.3.0/26
    Description: This is the first Private Subnet CidrBlock

  PrivateSubnet2CIDR:
    Type: String
    Default : 10.0.4.0/26
    Description: This is the Second Private Subnet CidrBlock

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: !Ref VPCName

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0 , !GetAZs ''] 
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PublicSubnet1   # JJTechVPC PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1 , !GetAZs ''] 
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PublicSubnet2   # JJTechVPC PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0 , !GetAZs ''] 
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PrivateSubnet1   # JJTechVPC PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1 , !GetAZs ''] 
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PrivateSubnet2   # JJTechVPC PrivateSubnet2

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} IGW   # JJTechVPC IGW
  
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  EIPNatGateway1:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: VPC
    DependsOn: IGWAttachment

  EIPNatGateway2:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: VPC
    DependsOn: IGWAttachment

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties: 
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt EIPNatGateway1.AllocationId

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties: 
      SubnetId: !Ref PublicSubnet2
      AllocationId: !GetAtt EIPNatGateway2.AllocationId

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PublicRT   # JJTechVPC PublicRT
      
  PublicRouteIGW:
    Type: AWS::EC2::Route
    DependsOn: IGWAttachment
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref IGW

  PublicRouteTableAssociationPS1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicRouteTableAssociationPS2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PrivateRT1   # JJTechVPC PrivateRT1

  PrivateRouteNATGW1:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PrivateRouteTable1
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NatGateway1

  PrivateRouteTableAssociationPS1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${VPCName} PrivateRT2   # JJTechVPC PrivateRT2

  PrivateRouteNATGW2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateRouteTableAssociationPS2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  
  DefaultSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName : !Sub ${VPCName} SG   # JJTechVPC SG
      GroupDescription: Default SG

Outputs:
  VPC:
    Value: !Ref VPC
    Export: 
      Name: DEMOVPC
  
  PublicSubnets:
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]

  PrivateSubnets:
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ] ]